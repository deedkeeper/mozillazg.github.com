<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Mozillazg's Blog</title><link href="http://mozillazg.com/" rel="alternate"></link><link href="http://mozillazg.com/feeds/git.atom.xml" rel="self"></link><id>http://mozillazg.com/</id><updated>2014-02-12T00:00:00+00:00</updated><entry><title>[git]如何删除在远程已被删除的本地分支（清理本地分支）</title><link href="http://mozillazg.com/2014/02/git-delete-all-local-branches-which-are-remotely-deleted.html" rel="alternate"></link><updated>2014-02-12T00:00:00+00:00</updated><author><name>mozillazg</name></author><id>tag:mozillazg.com,2014-02-12:2014/02/git-delete-all-local-branches-which-are-remotely-deleted.html</id><summary type="html">&lt;p&gt; 通过  &lt;tt class="docutils literal"&gt;git fetch &lt;span class="pre"&gt;-p&lt;/span&gt;&lt;/tt&gt;  命令可以实现清理本地分支的功能 :&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ git fetch -p
 x [deleted]         (none)     -&amp;gt; origin/feature-xxx
 x [deleted]         (none)     -&amp;gt; origin/feature-xxxx
 x [deleted]         (none)     -&amp;gt; origin/feature-xxxxx
 x [deleted]         (none)     -&amp;gt; origin/hotfix-xx

#  然后再执行 
$ git branch -r | awk '{print $1}' | egrep -v -f /dev/fd/0 &amp;lt;(git branch -vv | grep origin) | awk '{print $1}' | xargs git branch -d
  已删除分支  feature-xxx（ 曾为  328b639）。
  已删除分支  feature-xxxx（ 曾为  5e77d10）。
  已删除分支  hotfix-xx（ 曾为  5c13813）。
&lt;/pre&gt;
&lt;div class="section" id="id1"&gt;
&lt;h2&gt; 参考资料 &lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://stackoverflow.com/questions/1072171/how-do-you-remove-an-invalid-remote-branch-reference-from-git"&gt;How do you remove an invalid remote branch reference from Git? - Stack Overflow&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://stackoverflow.com/questions/13064613/git-how-to-prune-local-tracking-branches-that-do-not-exist-on-remote-anymore"&gt;Git: How to prune local tracking branches that do not exist on remote anymore - Stack Overflow&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary><category term="git"></category></entry><entry><title>[git]按日期列出所有分支信息</title><link href="http://mozillazg.com/2013/08/git-show-branches-by-date.html" rel="alternate"></link><updated>2013-08-17T00:00:00+00:00</updated><author><name>mozillazg</name></author><id>tag:mozillazg.com,2013-08-17:2013/08/git-show-branches-by-date.html</id><summary type="html">&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="go"&gt;for k in `git branch|perl -pe s/^..//`;do echo -e &amp;quot;\e[31m&amp;quot;$k&amp;quot;\e[0m&amp;quot; `git log -1 --pretty=format:&amp;#39;- %s %Cgreen(%ci %cr) %C(bold blue)&amp;lt;%an&amp;gt;%Creset&amp;#39; &amp;quot;$k&amp;quot;|head -n 2`\\t;done | sort&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img alt="git-show-branches-by-date" src="/static/images/2013-8-17_19-04-55.png" title="title" /&gt;&lt;/p&gt;
&lt;h2 id="_1"&gt; 参考 &lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.commandlinefu.com/commands/view/2345/show-git-branches-by-date-useful-for-showing-active-branches"&gt;Show git branches by date - useful for showing active branches | commandlinefu.com&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</summary><category term="git"></category></entry><entry><title>[git]显示单个文件变更日志</title><link href="http://mozillazg.com/2013/08/git-show-file-changelog.html" rel="alternate"></link><updated>2013-08-17T00:00:00+00:00</updated><author><name>mozillazg</name></author><id>tag:mozillazg.com,2013-08-17:2013/08/git-show-file-changelog.html</id><summary type="html">&lt;p&gt;&lt;code&gt;git log -p filename&lt;/code&gt;:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="gp"&gt;$&lt;/span&gt; git log -p fabfile.py
&lt;span class="go"&gt;commit fd792030bc0ac1db0f1f97ec701a2fd8bcb26a07&lt;/span&gt;
&lt;span class="go"&gt;Author: username &amp;lt;email&amp;gt;&lt;/span&gt;
&lt;span class="go"&gt;Date:   Sun Jun 23 15:36:58 2013 +0800&lt;/span&gt;

&lt;span class="go"&gt;    commit title&lt;/span&gt;

&lt;span class="go"&gt;diff --git a/fabfile.py b/fabfile.py&lt;/span&gt;
&lt;span class="go"&gt;index 4ed36fa..1408118 100644&lt;/span&gt;
&lt;span class="go"&gt;--- a/fabfile.py&lt;/span&gt;
&lt;span class="go"&gt;+++ b/fabfile.py&lt;/span&gt;
&lt;span class="go"&gt;@@ -9,28 +9,29 @@ from fabric.api import settings&lt;/span&gt;

&lt;span class="go"&gt; @task&lt;/span&gt;
&lt;span class="go"&gt; def make_html():&lt;/span&gt;
&lt;span class="go"&gt;-    &amp;quot;&amp;quot;&amp;quot; 生成  html  文件 &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class="go"&gt;-    local(&amp;#39;pelican content -o output -s pelicanconf.py&amp;#39;)&lt;/span&gt;
&lt;span class="go"&gt;+    &amp;quot;&amp;quot;&amp;quot;generate the web site&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class="go"&gt;+    with settings(warn_only=True):&lt;/span&gt;
&lt;span class="go"&gt;+        local(&amp;#39;pelican content -o output -s pelicanconf.py -D&amp;#39;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;code&gt;git log filename&lt;/code&gt;:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="gp"&gt;$&lt;/span&gt; git log fabfile.py
&lt;span class="go"&gt;commit fd792030bc0ac1db0f1f97ec701a2fd8bcb26a07&lt;/span&gt;
&lt;span class="go"&gt;Author: username &amp;lt;email&amp;gt;&lt;/span&gt;
&lt;span class="go"&gt;Date:   Sun Jun 23 15:36:58 2013 +0800&lt;/span&gt;

&lt;span class="go"&gt;    commit title&lt;/span&gt;


&lt;span class="gp"&gt;$&lt;/span&gt; git log --graph --pretty&lt;span class="o"&gt;=&lt;/span&gt;format:&lt;span class="s1"&gt;&amp;#39;%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)&amp;lt;%an&amp;gt;%Creset&amp;#39;&lt;/span&gt; --abbrev-commit fabfile.py
&lt;span class="go"&gt;* fd79203 - commit title (8 weeks ago) &amp;lt;username&amp;gt;&lt;/span&gt;
&lt;span class="go"&gt;* 7642a05 - commit title (10 weeks ago) &amp;lt;username&amp;gt;&lt;/span&gt;
&lt;span class="go"&gt;* d04ba24 - commit title (10 weeks ago) &amp;lt;username&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2 id="_1"&gt; 参考 &lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://stackoverflow.com/questions/278192/view-the-change-history-of-a-file-using-git-versioning"&gt;git log - View the change history of a file using Git versioning - Stack Overflow&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</summary><category term="git"></category></entry></feed>
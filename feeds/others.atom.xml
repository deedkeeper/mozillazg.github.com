<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Mozillazg's Blog</title><link href="http://mozillazg.com/" rel="alternate"></link><link href="http://mozillazg.com/feeds/others.atom.xml" rel="self"></link><id>http://mozillazg.com/</id><updated>2013-06-21T00:00:00+00:00</updated><entry><title>mysql 基于 master-master 的双机热备配置</title><link href="http://mozillazg.com/2013/06/mysql-master-master.html" rel="alternate"></link><updated>2013-06-21T00:00:00+00:00</updated><author><name>mozillazg</name></author><id>tag:mozillazg.com,2013-06-21:2013/06/mysql-master-master.html</id><summary type="html">
&lt;p&gt;master-master 就是两台服务器互为主从：        &lt;br/&gt;
master1-slave(master2) &amp;amp;&amp;amp; master2-slave(master1)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;master1: 192.168.100.191&lt;/li&gt;
&lt;li&gt;master2: 192.168.100.166&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="master1-slavemaster2"&gt;master1-slave(master2)&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;mysql 版本最好一致&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id="master1"&gt;设置 master1&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;创建给 slave 登录用的用户名密码:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;mysql&amp;gt; GRANT REPLICATION SLAVE ON *.* TO &lt;span class="s1"&gt;'backup'&lt;/span&gt;@&lt;span class="s1"&gt;'192.168.100.166'&lt;/span&gt; IDENTIFIED BY &lt;span class="s1"&gt;'yNZE7fK9*@aMA?*ppF'&lt;/span&gt;;

&lt;span class="c"&gt;# humanreadable&lt;/span&gt;
mysql&amp;gt; &lt;span class="c"&gt;# grant replication slave on *.* to 'backup'@'192.168.100.166' identified by 'yNZE7fK9*@aMA?*ppF';&lt;/span&gt;

mysql&amp;gt; create database hello default charset utf8;
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;配置 my.cnf&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="c"&gt;# vim /etc/my.cnf&lt;/span&gt;
&lt;span class="o"&gt;[&lt;/span&gt;mysqld&lt;span class="o"&gt;]&lt;/span&gt;
server-id&lt;span class="o"&gt;=&lt;/span&gt;1    &lt;span class="c"&gt;#主机id，整数&lt;/span&gt;
&lt;span class="c"&gt;#开启二进制日志，并且名称为 /var/lib/mysql/mysql-bin.***&lt;/span&gt;
&lt;span class="c"&gt;# 如果是个路径则，保存到该路径下(log-bin=/var/log/mysql-bin.log  -&amp;gt; /var/log/mysql-bin.***)&lt;/span&gt;
log-bin&lt;span class="o"&gt;=&lt;/span&gt;mysql-bin
&lt;span class="nb"&gt;read&lt;/span&gt;-only&lt;span class="o"&gt;=&lt;/span&gt;0  &lt;span class="c"&gt;#主机读写权限，读写都可以&lt;/span&gt;
binlog-do-db&lt;span class="o"&gt;=&lt;/span&gt;hello   &lt;span class="c"&gt;#记录日志的数据库：需要的备份数据，多个写多行&lt;/span&gt;
&lt;span class="c"&gt;# binlog-do-db=hello2&lt;/span&gt;
binlog-ignore-db&lt;span class="o"&gt;=&lt;/span&gt;mysql &lt;span class="c"&gt;#不记录日志的数据库：不需要备份的数据库，多个写多行&lt;/span&gt;
binlog-ignore-db&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;test&lt;/span&gt;
binlog-ignore-db&lt;span class="o"&gt;=&lt;/span&gt;information_schema
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;重启 mysql: &lt;code&gt;serivce mysqld restart&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;导出数据库&lt;/p&gt;
&lt;p&gt;锁定数据库，不要退出 mysql shell&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;mysql&amp;gt;FLUSH TABLES WITH READ LOCK;
mysql&amp;gt;# flush tables with &lt;span class="nb"&gt;read &lt;/span&gt;lock;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;新开一个终端，导出数据库&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;mysqldump --master-data -uroot -p hello &amp;gt; hello.sql
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;查看主服务器的状态&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;mysql&amp;gt; show master status&lt;span class="se"&gt;\G&lt;/span&gt;;
*************************** 1. row ***************************
            File: mysql-bin.000001
        Position: 98
    Binlog_Do_DB: hello
Binlog_Ignore_DB: mysql,test,information_schema
1 row in &lt;span class="nb"&gt;set&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;0.00 sec&lt;span class="o"&gt;)&lt;/span&gt;

ERROR: 
No query specified
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;记下 Position 和 File 的值。
解锁&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;mysql&amp;gt; UNLOCK TABLES;
mysql&amp;gt; &lt;span class="c"&gt;# unlock tables;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id="slavemaster2"&gt;设置 slave(master2)&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;编辑 my.cnf&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="c"&gt;# vim /etc/my.cnf&lt;/span&gt;

&lt;span class="o"&gt;[&lt;/span&gt;mysqld&lt;span class="o"&gt;]&lt;/span&gt;
server-id&lt;span class="o"&gt;=&lt;/span&gt;2
log-bin&lt;span class="o"&gt;=&lt;/span&gt;mysql-bin
master-host&lt;span class="o"&gt;=&lt;/span&gt;192.168.100.191  &lt;span class="c"&gt;# master1&lt;/span&gt;
master-user&lt;span class="o"&gt;=&lt;/span&gt;backup  &lt;span class="c"&gt;# 刚才在 master1 上设置的用户名密码&lt;/span&gt;
master-password&lt;span class="o"&gt;=&lt;/span&gt;yNZE7fK9*@aMA?*ppF  &lt;span class="c"&gt;# password&lt;/span&gt;
master-port&lt;span class="o"&gt;=&lt;/span&gt;3306   &lt;span class="c"&gt;# master1 mysql port&lt;/span&gt;
master-connect-retry&lt;span class="o"&gt;=&lt;/span&gt;60 &lt;span class="c"&gt;#如果从服务器发现主服务器断掉，重新连接的时间差(秒)&lt;/span&gt;
replicate-do-db &lt;span class="o"&gt;=&lt;/span&gt;hello &lt;span class="c"&gt;#只复制某个库，多个写多行&lt;/span&gt;
replicate-ignore-db&lt;span class="o"&gt;=&lt;/span&gt;mysql &lt;span class="c"&gt;#不复制某个库&lt;/span&gt;
replicate-ignore-db&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;test&lt;/span&gt;
replicate-ignore-db&lt;span class="o"&gt;=&lt;/span&gt;information_schema
relay-log&lt;span class="o"&gt;=&lt;/span&gt;mysqld-relay-bin  &lt;span class="c"&gt;# 开启日志中继&lt;/span&gt;
log-slave-updates  &lt;span class="c"&gt;# slave将复制事件写进自己的二进制日志&lt;/span&gt;
&lt;span class="c"&gt;#5.5&lt;/span&gt;
&lt;span class="c"&gt;#log-slave-updates = ON&lt;/span&gt;
&lt;span class="c"&gt;#5.1&lt;/span&gt;
&lt;span class="c"&gt;#log-slave-updates = 1&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;导入 master 导出的数据库：&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;mysql&amp;gt; create database hello default charset utf8;
mysql -uroot -p hello &amp;lt; hello.sql
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;配置 master 信息：&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;mysql&amp;gt; slave stop;

mysql&amp;gt; CHANGE MASTER TO
-&amp;gt; &lt;span class="nv"&gt;MASTER_HOST&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'192.168.100.191'&lt;/span&gt;, //主服务器的IP地址
-&amp;gt; &lt;span class="nv"&gt;MASTER_USER&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'backup'&lt;/span&gt;, //同步数据库的用户
-&amp;gt; &lt;span class="nv"&gt;MASTER_PASSWORD&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'yNZE7fK9*@aMA?*ppF'&lt;/span&gt;, //同步数据库的密码
-&amp;gt; &lt;span class="nv"&gt;MASTER_LOG_FILE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'mysql-bin.000001'&lt;/span&gt;, //主服务器二进制日志的文件名&lt;span class="o"&gt;(&lt;/span&gt;前面要求记住的 File 参数&lt;span class="o"&gt;)&lt;/span&gt;
-&amp;gt; &lt;span class="nv"&gt;MASTER_LOG_POS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;98; //日志文件的开始位置&lt;span class="o"&gt;(&lt;/span&gt;前面要求记住的 Position 参数&lt;span class="o"&gt;)&lt;/span&gt;

mysql&amp;gt; CHANGE MASTER TO &lt;span class="nv"&gt;MASTER_HOST&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'192.168.100.191'&lt;/span&gt;, &lt;span class="nv"&gt;MASTER_USER&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'backup'&lt;/span&gt;, &lt;span class="nv"&gt;MASTER_PASSWORD&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'yNZE7fK9*@aMA?*ppF'&lt;/span&gt;, &lt;span class="nv"&gt;MASTER_LOG_FILE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'mysql-bin.000001'&lt;/span&gt;, &lt;span class="nv"&gt;MASTER_LOG_POS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;98;

mysql &amp;gt; slave start;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;重启 master, slave: &lt;code&gt;service mysqld restart&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;查看 slave 状态：&lt;/p&gt;
&lt;p&gt;进入 slave mysql:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;mysql&amp;gt; show slave status&lt;span class="se"&gt;\G&lt;/span&gt;;
*************************** 1. row ***************************
            Slave_IO_State: Connecting to master
                Master_Host: 192.168.100.191
                Master_User: backup
                Master_Port: 3306
            Connect_Retry: 60
            Master_Log_File: mysql-bin.000001
        Read_Master_Log_Pos: 98
            Relay_Log_File: mysqld-relay-bin.000001
            Relay_Log_Pos: 98
    Relay_Master_Log_File: mysql-bin.000001
        Slave_IO_Running: Yes
        Slave_SQL_Running: Yes
            Replicate_Do_DB: hello
        Replicate_Ignore_DB: mysql,test,information_schema
        Exec_Master_Log_Pos: 98
            Relay_Log_Space: 98
            Until_Log_Pos: 0
    Seconds_Behind_Master: NULL
1 row in &lt;span class="nb"&gt;set&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;0.00 sec&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;注意一定要有下面两项，没有的话查看错误日志(less /var/log/mysqld.log)：&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;        &lt;span class="nl"&gt;Slave_IO_Running:&lt;/span&gt; &lt;span class="n"&gt;Yes&lt;/span&gt;
        &lt;span class="nl"&gt;Slave_SQL_Running:&lt;/span&gt; &lt;span class="n"&gt;Yes&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;测试&lt;/p&gt;
&lt;p&gt;master 服务器&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;mysql&amp;gt; use hello;
Database changed
mysql&amp;gt; create table &lt;span class="nb"&gt;test&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;id int&lt;span class="o"&gt;)&lt;/span&gt;;
mysql&amp;gt; insert int &lt;span class="nb"&gt;test set &lt;/span&gt;&lt;span class="nv"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;1;

mysql&amp;gt; show master status&lt;span class="se"&gt;\G&lt;/span&gt;;
*************************** 1. row ***************************
            File: mysql-bin.000002  &lt;span class="c"&gt;# 这样这里&lt;/span&gt;
        Position: 276    &lt;span class="c"&gt;# 注意这里&lt;/span&gt;
    Binlog_Do_DB: hello
Binlog_Ignore_DB: mysql,test,information_schema
1 row in &lt;span class="nb"&gt;set&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;0.00 sec&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;slave 服务器&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;mysql&amp;gt; use hello;
mysql&amp;gt; show tables;
+-----------------+
| Tables_in_hello |
+-----------------+
| &lt;span class="nb"&gt;test&lt;/span&gt;            | 
+-----------------+
1 row in &lt;span class="nb"&gt;set&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;0.00 sec&lt;span class="o"&gt;)&lt;/span&gt;

mysql&amp;gt; &lt;span class="k"&gt;select&lt;/span&gt; * from &lt;span class="nb"&gt;test&lt;/span&gt;;
+------+
| id   |
+------+
|    1 | 
+------+
1 row in &lt;span class="nb"&gt;set&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;0.00 sec&lt;span class="o"&gt;)&lt;/span&gt;

mysql&amp;gt; show slave status&lt;span class="se"&gt;\G&lt;/span&gt;;
*************************** 1. row ***************************
            Slave_IO_State: Waiting &lt;span class="k"&gt;for &lt;/span&gt;master to send event
                Master_Host: 192.168.100.191
                Master_User: backup
                Master_Port: 3306
            Connect_Retry: 60
            Master_Log_File: mysql-bin.000002  &lt;span class="c"&gt;# 跟 master 一样&lt;/span&gt;
        Read_Master_Log_Pos: 276  &lt;span class="c"&gt;# 跟 master 一样&lt;/span&gt;
            Relay_Log_File: mysqld-relay-bin.000003
            Relay_Log_Pos: 413
    Relay_Master_Log_File: mysql-bin.000002
        Slave_IO_Running: Yes
        Slave_SQL_Running: Yes
            Replicate_Do_DB: hello
        Replicate_Ignore_DB: mysql,test,information_schema
                Last_Errno: 0
                Last_Error: 
            Skip_Counter: 0
        Exec_Master_Log_Pos: 276
            Relay_Log_Space: 413
    Seconds_Behind_Master: 0
1 row in &lt;span class="nb"&gt;set&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;0.00 sec&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="master2-slavemaster1"&gt;master2-slave(master1)&lt;/h2&gt;
&lt;h3 id="master2"&gt;master2:&lt;/h3&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;mysql&amp;gt; grant replication slave on *.* to &lt;span class="s1"&gt;'backup'&lt;/span&gt;@&lt;span class="s1"&gt;'192.168.100.191'&lt;/span&gt; identified by &lt;span class="s1"&gt;'yNZE7fK9*@aMA?*ppF'&lt;/span&gt;;
mysql&amp;gt; flush tables with &lt;span class="nb"&gt;read &lt;/span&gt;lock;
mysql&amp;gt; show master status&lt;span class="se"&gt;\G&lt;/span&gt;;
*************************** 1. row ***************************
            File: mysql-bin.000002
        Position: 276
    Binlog_Do_DB: 
Binlog_Ignore_DB: 
mysql&amp;gt; unlock tables;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;vim /etc/my.cnf:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="c"&gt;# as master&lt;/span&gt;
&lt;span class="c"&gt;#开启二进制日志，并且名称为 /var/log/mysql/mysql-bin.***&lt;/span&gt;
log-bin&lt;span class="o"&gt;=&lt;/span&gt;mysql-bin
&lt;span class="nb"&gt;read&lt;/span&gt;-only&lt;span class="o"&gt;=&lt;/span&gt;0  &lt;span class="c"&gt;#主机读写权限，读写都可以&lt;/span&gt;
binlog-do-db&lt;span class="o"&gt;=&lt;/span&gt;hello   &lt;span class="c"&gt;#记录日志的数据库：需要的备份数据，多个写多行&lt;/span&gt;
binlog-ignore-db&lt;span class="o"&gt;=&lt;/span&gt;mysql &lt;span class="c"&gt;#不记录日志的数据库：不需要备份的数据库，多个写多行&lt;/span&gt;
binlog-ignore-db&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;test&lt;/span&gt;
binlog-ignore-db&lt;span class="o"&gt;=&lt;/span&gt;information_schema
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;service mysqld restart&lt;/p&gt;
&lt;h4 id="slave"&gt;slave:&lt;/h4&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;mysql&amp;gt; slave stop;

mysql&amp;gt;  CHANGE MASTER TO &lt;span class="nv"&gt;MASTER_HOST&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'192.168.100.166'&lt;/span&gt;, &lt;span class="nv"&gt;MASTER_USER&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'backup'&lt;/span&gt;, &lt;span class="nv"&gt;MASTER_PASSWORD&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'yNZE7fK9*@aMA?*ppF'&lt;/span&gt;, &lt;span class="nv"&gt;MASTER_LOG_FILE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'mysql-bin.000002, MASTER_LOG_POS=276'&lt;/span&gt;;

mysql&amp;gt; slave start;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;vim /etc/my.cnf&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="c"&gt;# as slave&lt;/span&gt;
master-host&lt;span class="o"&gt;=&lt;/span&gt;192.168.100.166  &lt;span class="c"&gt;# master&lt;/span&gt;
master-user&lt;span class="o"&gt;=&lt;/span&gt;backup  &lt;span class="c"&gt;# 刚才在 master1 上设置的用户名密码&lt;/span&gt;
master-password&lt;span class="o"&gt;=&lt;/span&gt;yNZE7fK9*@aMA?*ppF  &lt;span class="c"&gt;# password&lt;/span&gt;
master-port&lt;span class="o"&gt;=&lt;/span&gt;3306   &lt;span class="c"&gt;# master1 mysql port&lt;/span&gt;
master-connect-retry&lt;span class="o"&gt;=&lt;/span&gt;60 &lt;span class="c"&gt;#如果从服务器发现主服务器断掉，重新连接的时间差(秒)&lt;/span&gt;
replicate-do-db &lt;span class="o"&gt;=&lt;/span&gt;hello &lt;span class="c"&gt;#只复制某个库，多个写多行&lt;/span&gt;
replicate-ignore-db&lt;span class="o"&gt;=&lt;/span&gt;mysql &lt;span class="c"&gt;#不复制某个库&lt;/span&gt;
replicate-ignore-db&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;test&lt;/span&gt;
replicate-ignore-db&lt;span class="o"&gt;=&lt;/span&gt;information_schema
relay-log&lt;span class="o"&gt;=&lt;/span&gt;mysqld-relay-bin  &lt;span class="c"&gt;# 开启日志中继&lt;/span&gt;
log-slave-updates  &lt;span class="c"&gt;# slave将复制事件写进自己的二进制日志&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;serivce mysqld restart&lt;/p&gt;
&lt;h4 id="_1"&gt;测试&lt;/h4&gt;
&lt;p&gt;master2:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;mysql&amp;gt; use hello;    
mysql&amp;gt; insert into &lt;span class="nb"&gt;test set &lt;/span&gt;&lt;span class="nv"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;2;
mysql&amp;gt; &lt;span class="k"&gt;select&lt;/span&gt; * from &lt;span class="nb"&gt;test&lt;/span&gt;;
+------+
| id   |
+------+
|    1 | 
|    2 | 
+------+
2 rows in &lt;span class="nb"&gt;set&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;0.00 sec&lt;span class="o"&gt;)&lt;/span&gt;
mysql&amp;gt; show master status&lt;span class="se"&gt;\G&lt;/span&gt;;
*************************** 1. row ***************************
            File: mysql-bin.000003
        Position: 187
    Binlog_Do_DB: hello
Binlog_Ignore_DB: mysql,test,information_schema
1 row in &lt;span class="nb"&gt;set&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;0.00 sec&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;slave:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;mysql&amp;gt; show slave status &lt;span class="se"&gt;\G&lt;/span&gt;;
*************************** 1. row ***************************
            Slave_IO_State: Waiting &lt;span class="k"&gt;for &lt;/span&gt;master to send event
                Master_Host: 192.168.100.166
                Master_User: backup
                Master_Port: 3306
            Connect_Retry: 60
            Master_Log_File: mysql-bin.000003
        Read_Master_Log_Pos: 187
            Relay_Log_File: mysqld-relay-bin.000003
            Relay_Log_Pos: 324
    Relay_Master_Log_File: mysql-bin.000003
        Slave_IO_Running: Yes
        Slave_SQL_Running: Yes
            Replicate_Do_DB: hello
        Replicate_Ignore_DB: mysql,test,information_schema
                Last_Errno: 0
                Last_Error: 
            Skip_Counter: 0
        Exec_Master_Log_Pos: 187
            Relay_Log_Space: 324
            Until_Condition: None
            Until_Log_File: 
            Until_Log_Pos: 0
    Seconds_Behind_Master: 0

mysql&amp;gt; use hello;

mysql&amp;gt; &lt;span class="k"&gt;select&lt;/span&gt; * from &lt;span class="nb"&gt;test&lt;/span&gt;;
+------+
| id   |
+------+
|    1 | 
|    2 | 
+------+
2 rows in &lt;span class="nb"&gt;set&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;0.00 sec&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;!--less /var/log/mysqld.log--&gt;
&lt;p&gt;最后的配置文件&lt;/p&gt;
&lt;p&gt;master1:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="c"&gt;# /etc/my.cnf&lt;/span&gt;
&lt;span class="o"&gt;[&lt;/span&gt;mysqld&lt;span class="o"&gt;]&lt;/span&gt;

&lt;span class="c"&gt;# as master&lt;/span&gt;
server-id&lt;span class="o"&gt;=&lt;/span&gt;1    &lt;span class="c"&gt;#主机id，整数&lt;/span&gt;
&lt;span class="c"&gt;#开启二进制日志，并且名称为 /var/lib/mysql/mysql-bin.***&lt;/span&gt;
log-bin&lt;span class="o"&gt;=&lt;/span&gt;mysql-bin
&lt;span class="nb"&gt;read&lt;/span&gt;-only&lt;span class="o"&gt;=&lt;/span&gt;0  &lt;span class="c"&gt;#主机读写权限，读写都可以&lt;/span&gt;
binlog-do-db&lt;span class="o"&gt;=&lt;/span&gt;hello   &lt;span class="c"&gt;#记录日志的数据库：需要的备份数据，多个写多行&lt;/span&gt;
&lt;span class="c"&gt;# binlog-do-db=hello2&lt;/span&gt;
binlog-ignore-db&lt;span class="o"&gt;=&lt;/span&gt;mysql &lt;span class="c"&gt;#不记录日志的数据库：不需要备份的数据库，多个写多行&lt;/span&gt;
binlog-ignore-db&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;test&lt;/span&gt;
binlog-ignore-db&lt;span class="o"&gt;=&lt;/span&gt;information_schema

&lt;span class="c"&gt;# as slave&lt;/span&gt;
master-host&lt;span class="o"&gt;=&lt;/span&gt;192.168.100.166  &lt;span class="c"&gt;# master&lt;/span&gt;
master-user&lt;span class="o"&gt;=&lt;/span&gt;backup  &lt;span class="c"&gt;# 刚才在 master1 上设置的用户名密码&lt;/span&gt;
master-password&lt;span class="o"&gt;=&lt;/span&gt;yNZE7fK9*@aMA?*ppF  &lt;span class="c"&gt;# password&lt;/span&gt;
master-port&lt;span class="o"&gt;=&lt;/span&gt;3306   &lt;span class="c"&gt;# master1 mysql port&lt;/span&gt;
master-connect-retry&lt;span class="o"&gt;=&lt;/span&gt;60 &lt;span class="c"&gt;#如果从服务器发现主服务器断掉，重新连接的时间差(秒)&lt;/span&gt;
replicate-do-db &lt;span class="o"&gt;=&lt;/span&gt;hello &lt;span class="c"&gt;#只复制某个库，多个写多行&lt;/span&gt;
replicate-ignore-db&lt;span class="o"&gt;=&lt;/span&gt;mysql &lt;span class="c"&gt;#不复制某个库&lt;/span&gt;
replicate-ignore-db&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;test&lt;/span&gt;
replicate-ignore-db&lt;span class="o"&gt;=&lt;/span&gt;information_schema
relay-log&lt;span class="o"&gt;=&lt;/span&gt;mysqld-relay-bin  &lt;span class="c"&gt;# 开启日志中继&lt;/span&gt;
log-slave-updates  &lt;span class="c"&gt;# slave将复制事件写进自己的二进制日志&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;master2:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="c"&gt;# /etc/my.cnf&lt;/span&gt;
&lt;span class="o"&gt;[&lt;/span&gt;mysqld&lt;span class="o"&gt;]&lt;/span&gt;

&lt;span class="c"&gt;# as slave&lt;/span&gt;
server-id&lt;span class="o"&gt;=&lt;/span&gt;2
log-bin&lt;span class="o"&gt;=&lt;/span&gt;mysql-bin
master-host&lt;span class="o"&gt;=&lt;/span&gt;192.168.100.191  &lt;span class="c"&gt;# master1&lt;/span&gt;
master-user&lt;span class="o"&gt;=&lt;/span&gt;backup  &lt;span class="c"&gt;# 刚才在 master1 上设置的用户名密码&lt;/span&gt;
master-password&lt;span class="o"&gt;=&lt;/span&gt;yNZE7fK9*@aMA?*ppF  &lt;span class="c"&gt;# password&lt;/span&gt;
master-port&lt;span class="o"&gt;=&lt;/span&gt;3306   &lt;span class="c"&gt;# master1 mysql port&lt;/span&gt;
master-connect-retry&lt;span class="o"&gt;=&lt;/span&gt;60 &lt;span class="c"&gt;#如果从服务器发现主服务器断掉，重新连接的时间差(秒)&lt;/span&gt;
replicate-do-db &lt;span class="o"&gt;=&lt;/span&gt;hello &lt;span class="c"&gt;#只复制某个库，多个写多行&lt;/span&gt;
replicate-ignore-db&lt;span class="o"&gt;=&lt;/span&gt;mysql &lt;span class="c"&gt;#不复制某个库&lt;/span&gt;
replicate-ignore-db&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;test&lt;/span&gt;
replicate-ignore-db&lt;span class="o"&gt;=&lt;/span&gt;information_schema
relay-log&lt;span class="o"&gt;=&lt;/span&gt;mysqld-relay-bin  &lt;span class="c"&gt;# 开启日志中继&lt;/span&gt;
log-slave-updates  &lt;span class="c"&gt;# 示slave将复制事件写进自己的二进制日志&lt;/span&gt;

&lt;span class="c"&gt;# as master&lt;/span&gt;
&lt;span class="c"&gt;#开启二进制日志，并且名称为 /var/lib/mysql/mysql-bin.***&lt;/span&gt;
log-bin&lt;span class="o"&gt;=&lt;/span&gt;mysql-bin
&lt;span class="nb"&gt;read&lt;/span&gt;-only&lt;span class="o"&gt;=&lt;/span&gt;0  &lt;span class="c"&gt;#主机读写权限，读写都可以&lt;/span&gt;
binlog-do-db&lt;span class="o"&gt;=&lt;/span&gt;hello   &lt;span class="c"&gt;#记录日志的数据库：需要的备份数据，多个写多行&lt;/span&gt;
&lt;span class="c"&gt;# binlog-do-db=hello2&lt;/span&gt;
binlog-ignore-db&lt;span class="o"&gt;=&lt;/span&gt;mysql &lt;span class="c"&gt;#不记录日志的数据库：不需要备份的数据库，多个写多行&lt;/span&gt;
binlog-ignore-db&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;test&lt;/span&gt;
binlog-ignore-db&lt;span class="o"&gt;=&lt;/span&gt;information_schema
&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="_2"&gt;参考&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.d5s.cn/archives/95"&gt;MYSQL 主从服务器配置 | 无影的博客&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://database.51cto.com/art/200510/8434.htm"&gt;Mysql 数据库双机热备的配置 - 51CTO.COM&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://serverfault.com/questions/268627/mysql-master-master-replication-of-all-databases-how"&gt;MySQL Master-Master Replication of ALL databases. How? - Server Fault&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://dev.mysql.com/doc/refman/5.1/en/replication.html"&gt;MySQL :: MySQL 5.1 Reference Manual :: 16 Replication&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="file:///D:/Settings/Mozilla/ScrapBook/data/20130522165305/index.html"&gt;MySqL的主从复制和读写分离 - ZhouLS的个人空间 - 开源中国社区&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://blog.csdn.net/hguisu/article/details/7325124"&gt;高性能Mysql主从架构的复制原理及配置详解 - guisu，程序人生。 - 博客频道 - CSDN.NET&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://mvbridge.blog.sohu.com/172644721.html"&gt;MySQL master slave 安装部署及常见问题-桥-搜狐博客&lt;/a&gt;
&lt;!--* [)--&gt;
&lt;!--https://groups.google.com/forum/#!topic/django-users/0RiRw6jlnAs--&gt;&lt;/li&gt;
&lt;/ul&gt;</summary><category term="mysql"></category><category term="replication"></category></entry><entry><title>pelican 使用笔记</title><link href="http://mozillazg.com/2013/03/pelican-notes.html" rel="alternate"></link><updated>2013-03-04T00:00:00+00:00</updated><author><name>mozillazg</name></author><id>tag:mozillazg.com,2013-03-04:2013/03/pelican-notes.html</id><summary type="html">&lt;p&gt;记录一些使用 Pelican 写博客的经验。&lt;/p&gt;
&lt;h2 id="markdown"&gt;Markdown&lt;/h2&gt;
&lt;h3 id="_1"&gt;多级列表&lt;/h3&gt;
&lt;p&gt;官方的 Markdown 语法：&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;* list
  * sublist
  * sublist
* list
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;pelican 使用的是 python-markdown 来解析 markdown 文件，
而 python-markdown 的关于多级列表的语法跟官方的有点不一样：&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;* list
    * sublist
    * sublist
* list
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;子列表与父列表之间的对齐方式是：至少空出4个空格或1一个 Tab 键。
官方的语法兼容 python-markdown 的语法，所以不要担心兼容性。&lt;/p&gt;
&lt;h3 id="_2"&gt;语法高亮&lt;/h3&gt;
&lt;p&gt;python-markdown 使用 pygments 来实现语法高亮的功能，并且支持指定编程语言。&lt;/p&gt;
&lt;p&gt;比如，指定代码用的是 Python 编程语言：&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;:::python
print &amp;#39;hello, world&amp;#39;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;效果：&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;hello, world&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;我用的比较多的语言标记：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;:::text&lt;/li&gt;
&lt;li&gt;:::python&lt;/li&gt;
&lt;li&gt;:::django&lt;/li&gt;
&lt;li&gt;:::html+django&lt;/li&gt;
&lt;li&gt;:::bash&lt;/li&gt;
&lt;li&gt;:::console&lt;/li&gt;
&lt;li&gt;:::nginx&lt;/li&gt;
&lt;li&gt;:::apacheconf&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;更多的语言标记，可以通过查看网站 &lt;a href="http://pygments.org/demo/"&gt;Pygments — Python syntax highlighter&lt;/a&gt; 的源代码操作相关的语言标记（查看 id 为 flt_lang 的 select 的 option 值）。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;注意&lt;/strong&gt;：该语法不兼容官方 markdown 语法。&lt;/p&gt;
&lt;h2 id="_3"&gt;参考&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://docs.getpelican.com/"&gt;Pelican — Pelican documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://pythonhosted.org/Markdown/extensions/code_hilite.html"&gt;CodeHilite Extension — Python Markdown&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</summary><category term="pelican"></category><category term="markdown"></category><category term="pygments"></category><category term="python-markdown"></category></entry><entry><title>更改 phpMyAdmin 默认访问端口(apache2)</title><link href="http://mozillazg.com/2013/02/change-phpmyadmin-default-visit-port.html" rel="alternate"></link><updated>2013-02-27T00:00:00+00:00</updated><author><name>mozillazg</name></author><id>tag:mozillazg.com,2013-02-27:2013/02/change-phpmyadmin-default-visit-port.html</id><summary type="html">&lt;p&gt;将访问 phpMyAdmin 的端口从默认的 80 改为 8081 。&lt;/p&gt;
&lt;p&gt;本文的 phpmyadmin 目录：&lt;code&gt;/var/www/phpmyadmin/&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;编辑 apache 配置文件：&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="c"&gt;# vi /etc/apache2/sites-available/phpmyadmin&lt;/span&gt;

&amp;lt;VirtualHost *:8081&amp;gt;
    ServerName 127.0.0.1
    DocumentRoot /var/www/phpmyadmin
&amp;lt;/VirtualHost&amp;gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;配置 apache 监听 8081 端口：&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="c"&gt;# vi /etc/apache2/ports.conf&lt;/span&gt;

&lt;span class="c"&gt;# 添加&lt;/span&gt;
NameVirtualHost *:8081
Listen 8081
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;重启 apache 服务：&lt;code&gt;service apache2 restart&lt;/code&gt;，
现在可以通过 http://ip:8081/phpmyadmin/ 访问 phpMyAdmin 了。&lt;/p&gt;
&lt;h2 id="_1"&gt;参考&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://ubuntuforums.org/showthread.php?t=1329607"&gt;PHPMyAdmin Port Change - Ubuntu Forums&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</summary><category term="phpmyadmin"></category><category term="mysql"></category><category term="ubuntu"></category></entry><entry><title>修改 pelican 3.1 使之支持中文文件夹作为分类目录</title><link href="http://mozillazg.com/2013/01/fix-pelican-use-chinese-folder-as-category.html" rel="alternate"></link><updated>2013-01-31T00:00:00+00:00</updated><author><name>mozillazg</name></author><id>tag:mozillazg.com,2013-01-31:2013/01/fix-pelican-use-chinese-folder-as-category.html</id><summary type="html">&lt;p&gt;前提：&lt;/p&gt;
&lt;p&gt;windows + pelican 3.1 + python 2.6    &lt;br /&gt;
并且 pelican 配置文件中设置了 &lt;code&gt;USE_FOLDER_AS_CATEGORY = True&lt;/code&gt;（默认为 True，只要不设置为 False 即可）&lt;/p&gt;
&lt;p&gt;默认情况下，pelican 不支持中文文件夹作为分类目录：&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="go"&gt;d:\myblog&amp;gt;pelican content -o output -s pelicanconf.py -D&lt;/span&gt;
&lt;span class="go"&gt;...&lt;/span&gt;

&lt;span class="go"&gt;CRITICAL: &amp;#39;utf8&amp;#39; codec can&amp;#39;t decode byte 0xd3 in position 2: invalid continuation byte&lt;/span&gt;
&lt;span class="go"&gt;Traceback (most recent call last):&lt;/span&gt;
&lt;span class="go"&gt;  File &amp;quot;C:\Python26\Scripts\pelican-script.py&amp;quot;, line 9, in &amp;lt;module&amp;gt;&lt;/span&gt;
&lt;span class="go"&gt;    load_entry_point(&amp;#39;pelican==3.1&amp;#39;, &amp;#39;console_scripts&amp;#39;, &amp;#39;pelican&amp;#39;)()&lt;/span&gt;
&lt;span class="go"&gt;  File &amp;quot;C:\Python26\lib\site-packages\pelican\__init__.py&amp;quot;, line 319, in main&lt;/span&gt;
&lt;span class="go"&gt;    pelican.run()&lt;/span&gt;
&lt;span class="go"&gt;  File &amp;quot;C:\Python26\lib\site-packages\pelican\__init__.py&amp;quot;, line 152, in run&lt;/span&gt;
&lt;span class="go"&gt;    p.generate_context()&lt;/span&gt;
&lt;span class="go"&gt;  File &amp;quot;C:\Python26\lib\site-packages\pelican\generators.py&amp;quot;, line 337, in generate_context&lt;/span&gt;
&lt;span class="go"&gt;    .decode(&amp;#39;utf-8&amp;#39;)&lt;/span&gt;
&lt;span class="go"&gt;  File &amp;quot;C:\Python26\lib\encodings\utf_8.py&amp;quot;, line 16, in decode&lt;/span&gt;
&lt;span class="go"&gt;    return codecs.utf_8_decode(input, errors, True)&lt;/span&gt;
&lt;span class="go"&gt;UnicodeDecodeError: &amp;#39;utf8&amp;#39; codec can&amp;#39;t decode byte 0xd3 in position 2: invalid continuation byte&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;从错误信息中我们可以看到 pelican 对文件夹名称默认按 utf8 编码进行解码，而在 windows 下文件（夹）名称默认是按 gbk 进行编码的，所以就出现了编码错误。&lt;/p&gt;
&lt;p&gt;下面我们来修复这个错误。&lt;/p&gt;
&lt;p&gt;编辑文件 &lt;code&gt;C:\Python26\lib\site-packages\pelican\generators.py&lt;/code&gt; 进行以下两步操作即可：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;首先导入 sys 模块：&lt;code&gt;import sys&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;然后编辑第 338 行左右的&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;category&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;basename&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dirname&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;\
           &lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;decode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;utf-8&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;为&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;category&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;basename&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dirname&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;\
           &lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;decode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;stdin&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;encoding&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;此处的修改是为了让程序使用系统默认的输入编码（简体中文版 Windows 下默认是 gbk）进行解码。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;进行相关修改后，再次执行 &lt;code&gt;pelican content -o output -s pelicanconf.py -D&lt;/code&gt; 生成 html 文件，执行过程一切顺利。&lt;/p&gt;
&lt;p&gt;但也有一个不完美的地方：&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="/static/images/2013-1-pelican-issue-01.png" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="/static/images/2013-1-pelican-issue-02.png" /&gt;&lt;/p&gt;
&lt;p&gt;虽然在浏览器中这个不会是乱码，但看起来还是有点不爽。
下面我们要将它变成中文拼音，这样就不会乱码了。&lt;/p&gt;
&lt;p&gt;继续编辑 generators.py 文件：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;导入相关模块：&lt;code&gt;from pelican.utils import slugify&lt;/code&gt; 。
   这个模块的作用是将非 ASCII 字符转换为 ASCII 字符，比如，将 &lt;code&gt;中国&lt;/code&gt; 转换为 &lt;code&gt;zhong-guo&lt;/code&gt; 。&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;将 199 行左右的&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;cat&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;arts&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;categories&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;arts&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sort&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;attrgetter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;date&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;reverse&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;改为&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;cat&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;arts&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;categories&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;cat&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;slugify&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cat&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;arts&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sort&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;attrgetter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;date&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;reverse&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;修改后的效果：&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="/static/images/2013-1-pelican-fixed-01.png" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="/static/images/2013-1-pelican-fixed-02.png" /&gt;&lt;/p&gt;</summary><category term="pelican"></category><category term="python"></category></entry><entry><title>使用 Pelican 生成静态博客</title><link href="http://mozillazg.com/2013/01/use-pelican-to-generate-static-blog.html" rel="alternate"></link><updated>2013-01-15T00:00:00+00:00</updated><author><name>mozillazg</name></author><id>tag:mozillazg.com,2013-01-15:2013/01/use-pelican-to-generate-static-blog.html</id><summary type="html">&lt;h2 id="pelican"&gt;安装 Pelican&lt;/h2&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="go"&gt;sudo pip install pelican&lt;/span&gt;
&lt;span class="go"&gt;sudo pip install webassets&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2 id="_1"&gt;使用&lt;/h2&gt;
&lt;h3 id="_2"&gt;配置&lt;/h3&gt;
&lt;h3 id="_3"&gt;主题&lt;/h3&gt;</summary><category term="pelican"></category></entry></feed>
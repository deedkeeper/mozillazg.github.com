<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Mozillazg's Blog</title><link href="http://mozillazg.com/" rel="alternate"></link><link href="http://mozillazg.com/feeds/others.atom.xml" rel="self"></link><id>http://mozillazg.com/</id><updated>2014-07-17T00:00:00+00:00</updated><entry><title>修复启动 sqldeveloper 时出现“Unable to create an instance of the Java Virtual Machine Located at path”错误</title><link href="http://mozillazg.com/2014/07/fix-Unable-to-create-an-instance-of-the-Java-Virtual-Machine-Located-at-path-error-for-oracle-sqldeveloper.html" rel="alternate"></link><updated>2014-07-17T00:00:00+00:00</updated><author><name>mozillazg</name></author><id>tag:mozillazg.com,2014-07-17:2014/07/fix-Unable-to-create-an-instance-of-the-Java-Virtual-Machine-Located-at-path-error-for-oracle-sqldeveloper.html</id><summary type="html">&lt;p&gt; 刚才打开  sqldeveloper  时提示如下错误 ：&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;Unable&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;create&lt;/span&gt; &lt;span class="n"&gt;an&lt;/span&gt; &lt;span class="n"&gt;instance&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;Java&lt;/span&gt; &lt;span class="n"&gt;Virtual&lt;/span&gt; &lt;span class="n"&gt;Machine&lt;/span&gt;
&lt;span class="n"&gt;Located&lt;/span&gt; &lt;span class="n"&gt;at&lt;/span&gt; &lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
&lt;span class="nl"&gt;x:&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;xxxx&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;jre&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;bin&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;client&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;jvm&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dll&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt; 最后的解决办法是 ： 编辑  &lt;code&gt;sqldeveloper.exe&lt;/code&gt;  所在目录下的  &lt;code&gt;ide\bin\ide.conf&lt;/code&gt;  文件 ，
 将  38  行左右的  &lt;code&gt;AddVMOption  -Xmx800M&lt;/code&gt;  改为  &lt;code&gt;AddVMOption -Xmx512M&lt;/code&gt;&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="cp"&gt;# AddVMOption  -Xmx800M&lt;/span&gt;
&lt;span class="n"&gt;AddVMOption&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;Xmx512M&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2 id="_1"&gt; 参考资料 &lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://pisceansheart.wordpress.com/2009/08/06/solution-to-unable-to-create-an-instance-of-the-java-virtual-machine-for-jdeveloper/"&gt;Solution to ‘Unable to Create an Instance of the Java Virtual Machine’ for JDeveloper | In Piscean's Heart &lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</summary><category term="sqldeveloper"></category></entry><entry><title>给终端文字加点颜色和特效</title><link href="http://mozillazg.com/2013/08/ansi-escape-sequences.html" rel="alternate"></link><updated>2013-08-25T00:00:00+00:00</updated><author><name>mozillazg</name></author><id>tag:mozillazg.com,2013-08-25:2013/08/ansi-escape-sequences.html</id><summary type="html">&lt;p&gt; 这个叫做 ：ANSI Escape Sequences/Code 。&lt;/p&gt;
&lt;p&gt; 文字特效相关的字符格式是 ：&lt;code&gt;ESC[#;#;....;#m&lt;/code&gt; ， 其中  #  的取值见下表 ：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;#  的值 &lt;/th&gt;
&lt;th&gt; 功能 &lt;/th&gt;
&lt;th&gt;python  代码 &lt;/th&gt;
&lt;th&gt; 截图 &lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;00  或  0&lt;/td&gt;
&lt;td&gt; 正常显示 &lt;/td&gt;
&lt;td&gt;&lt;code&gt;'\033[00m' + 'hello' + '\033[0;39m'&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;01  或  1&lt;/td&gt;
&lt;td&gt; 粗体 &lt;/td&gt;
&lt;td&gt;&lt;code&gt;'\033[01m' + 'hello' + '\033[0;39m'&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;02  或  2&lt;/td&gt;
&lt;td&gt; 模糊 &lt;/td&gt;
&lt;td&gt;&lt;code&gt;'\033[02m' + 'hello' + '\033[0;39m'&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;03  或  3&lt;/td&gt;
&lt;td&gt; 斜体 &lt;/td&gt;
&lt;td&gt;&lt;code&gt;'\033[03m' + 'hello' + '\033[0;39m'&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;04  或  4&lt;/td&gt;
&lt;td&gt; 下划线 &lt;/td&gt;
&lt;td&gt;&lt;code&gt;'\033[04m' + 'hello' + '\033[0;39m'&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;img alt="" src="/static/images/04.png" /&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;05  或  5&lt;/td&gt;
&lt;td&gt; 闪烁 （ 慢 ）&lt;/td&gt;
&lt;td&gt;&lt;code&gt;'\033[05m' + 'hello' + '\033[0;39m'&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;06  或  6&lt;/td&gt;
&lt;td&gt; 闪烁 （ 快 ）&lt;/td&gt;
&lt;td&gt;&lt;code&gt;'\033[06m' + 'hello' + '\033[0;39m'&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;07  或  7&lt;/td&gt;
&lt;td&gt; 反转显示 （ 前景色与背景色调过来 ）&lt;/td&gt;
&lt;td&gt;&lt;code&gt;'\033[07m' + 'hello' + '\033[0;39m'&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;img alt="" src="/static/images/07.png" /&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;08  或  8&lt;/td&gt;
&lt;td&gt; 隐藏 &lt;/td&gt;
&lt;td&gt;&lt;code&gt;'\033[08m' + 'hello' + '\033[0;39m'&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;img alt="" src="/static/images/08.png" /&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;22&lt;/td&gt;
&lt;td&gt; 正常 &lt;/td&gt;
&lt;td&gt;&lt;code&gt;'\033[22m' + 'hello' + '\033[0;39m'&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;23&lt;/td&gt;
&lt;td&gt; 不斜体 &lt;/td&gt;
&lt;td&gt;&lt;code&gt;'\033[23m' + 'hello' + '\033[0;39m'&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;24&lt;/td&gt;
&lt;td&gt; 无下划线 &lt;/td&gt;
&lt;td&gt;&lt;code&gt;'\033[24m' + 'hello' + '\033[0;39m'&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;25&lt;/td&gt;
&lt;td&gt; 不闪烁 &lt;/td&gt;
&lt;td&gt;&lt;code&gt;'\033[25m' + 'hello' + '\033[0;39m'&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;27&lt;/td&gt;
&lt;td&gt; 不反转 &lt;/td&gt;
&lt;td&gt;&lt;code&gt;'\033[26m' + 'hello' + '\033[0;39m'&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;28&lt;/td&gt;
&lt;td&gt; 不隐藏 &lt;/td&gt;
&lt;td&gt;&lt;code&gt;'\033[27m' + 'hello' + '\033[0;39m'&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt; 前景色 &lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;30&lt;/td&gt;
&lt;td&gt; 黑色 &lt;/td&gt;
&lt;td&gt;&lt;code&gt;'\033[30m' + 'hello' + '\033[0;39m'&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;img alt="" src="/static/images/30.png" /&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;31&lt;/td&gt;
&lt;td&gt; 红色 &lt;/td&gt;
&lt;td&gt;&lt;code&gt;'\033[31m' + 'hello' + '\033[0;39m'&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;img alt="" src="/static/images/31.png" /&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;32&lt;/td&gt;
&lt;td&gt; 绿色 &lt;/td&gt;
&lt;td&gt;&lt;code&gt;'\033[32m' + 'hello' + '\033[0;39m'&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;img alt="" src="/static/images/32.png" /&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;33&lt;/td&gt;
&lt;td&gt; 黄色 &lt;/td&gt;
&lt;td&gt;&lt;code&gt;'\033[33m' + 'hello' + '\033[0;39m'&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;img alt="" src="/static/images/33.png" /&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;34&lt;/td&gt;
&lt;td&gt; 蓝色 &lt;/td&gt;
&lt;td&gt;&lt;code&gt;'\033[34m' + 'hello' + '\033[0;39m'&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;img alt="" src="/static/images/34.png" /&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;35&lt;/td&gt;
&lt;td&gt; 品红 / 紫红 &lt;/td&gt;
&lt;td&gt;&lt;code&gt;'\033[35m' + 'hello' + '\033[0;39m'&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;img alt="" src="/static/images/35.png" /&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;36&lt;/td&gt;
&lt;td&gt; 青色 / 蓝绿 &lt;/td&gt;
&lt;td&gt;&lt;code&gt;'\033[36m' + 'hello' + '\033[0;39m'&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;img alt="" src="/static/images/36.png" /&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;37&lt;/td&gt;
&lt;td&gt; 白色 &lt;/td&gt;
&lt;td&gt;&lt;code&gt;'\033[37m' + 'hello' + '\033[0;39m'&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;img alt="" src="/static/images/37.png" /&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;38&lt;/td&gt;
&lt;td&gt;xterm-256  色 &lt;/td&gt;
&lt;td&gt;&lt;code&gt;'\033[38;5;7m' + 'hello' + '\033[0;39m'&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;img alt="" src="/static/images/38.png" /&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;39&lt;/td&gt;
&lt;td&gt; 默认色 &lt;/td&gt;
&lt;td&gt;&lt;code&gt;'\033[39m' + 'hello' + '\033[0;39m'&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt; 背景色 &lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;40&lt;/td&gt;
&lt;td&gt; 黑色 &lt;/td&gt;
&lt;td&gt;&lt;code&gt;'\033[40m' + 'hello' + '\033[0;39m'&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;img alt="" src="/static/images/38.png" /&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;41&lt;/td&gt;
&lt;td&gt; 红色 &lt;/td&gt;
&lt;td&gt;&lt;code&gt;'\033[41m' + 'hello' + '\033[0;39m'&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;img alt="" src="/static/images/41.png" /&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;42&lt;/td&gt;
&lt;td&gt; 绿色 &lt;/td&gt;
&lt;td&gt;&lt;code&gt;'\033[42m' + 'hello' + '\033[0;39m'&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;img alt="" src="/static/images/42.png" /&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;43&lt;/td&gt;
&lt;td&gt; 黄色 &lt;/td&gt;
&lt;td&gt;&lt;code&gt;'\033[43m' + 'hello' + '\033[0;39m'&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;img alt="" src="/static/images/43.png" /&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;44&lt;/td&gt;
&lt;td&gt; 蓝色 &lt;/td&gt;
&lt;td&gt;&lt;code&gt;'\033[44m' + 'hello' + '\033[0;39m'&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;img alt="" src="/static/images/44.png" /&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;45&lt;/td&gt;
&lt;td&gt; 品红 / 紫红 &lt;/td&gt;
&lt;td&gt;&lt;code&gt;'\033[45m' + 'hello' + '\033[0;39m'&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;img alt="" src="/static/images/45.png" /&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;46&lt;/td&gt;
&lt;td&gt; 青色 / 蓝绿 &lt;/td&gt;
&lt;td&gt;&lt;code&gt;'\033[46m' + 'hello' + '\033[0;39m'&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;img alt="" src="/static/images/46.png" /&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;47&lt;/td&gt;
&lt;td&gt; 白色 &lt;/td&gt;
&lt;td&gt;&lt;code&gt;'\033[47m' + 'hello' + '\033[0;39m'&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;img alt="" src="/static/images/47.png" /&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;48&lt;/td&gt;
&lt;td&gt;xterm-256  色 &lt;/td&gt;
&lt;td&gt;&lt;code&gt;'\033[48;5;7m' + 'hello' + '\033[0;39m'&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;img alt="" src="/static/images/48.png" /&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;49&lt;/td&gt;
&lt;td&gt; 默认色 &lt;/td&gt;
&lt;td&gt;&lt;code&gt;'\033[49m' + 'hello' + '\033[0;39m'&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;!--
https://github.com/robertknight/konsole/blob/master/tests/color-spaces.pl
Quoting &lt;https://github.com/robertknight/konsole/blob/master/user-doc/README.moreColors&gt;:
   ESC[ … 38;2;&lt;r&gt;;&lt;g&gt;;&lt;b&gt; … m Select RGB foreground color
   ESC[ … 48;2;&lt;r&gt;;&lt;g&gt;;&lt;b&gt; … m Select RGB background color

##  示例 

print('\033[31m \033[44m' + 'some red text' + '\033[0;39m' + 'ab')
--&gt;

&lt;p&gt; 同时指定背景及前景色 ： &lt;code&gt;'\033[47;31m' + 'hello' + '\033[0;39m'&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="/static/images/47-31.png" /&gt;&lt;/p&gt;
&lt;h2 id="_1"&gt; 参考 &lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.isthe.com/chongo/tech/comp/ansi_escapes.html"&gt;ANSI Escape Sequences&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://en.wikipedia.org/wiki/ANSI_escape_code"&gt;ANSI escape code - Wikipedia, the free encyclopedia&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.pixelbeat.org/docs/terminal_colours/"&gt;Terminal colour highlights&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://en.wikipedia.org/wiki/Xterm"&gt;xterm - Wikipedia, the free encyclopedia&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</summary><category term="ansi"></category><category term="color"></category><category term="terminal"></category></entry><entry><title>Cygwin 中的软件包管理工具： apt-cyg</title><link href="http://mozillazg.com/2013/06/cygwin-install-packages-by-apt-cyg.html" rel="alternate"></link><updated>2013-06-23T00:00:00+00:00</updated><author><name>mozillazg</name></author><id>tag:mozillazg.com,2013-06-23:2013/06/cygwin-install-packages-by-apt-cyg.html</id><summary type="html">&lt;p&gt;apt-cyg  可以在  Cygwin  中实现类似  linux  下的  &lt;code&gt;yum&lt;/code&gt;  或  &lt;code&gt;apt-get&lt;/code&gt;  的功能 。&lt;/p&gt;
&lt;h2 id="_1"&gt; 主页 &lt;/h2&gt;
&lt;p&gt;&lt;a href="http://code.google.com/p/apt-cyg/"&gt;http://code.google.com/p/apt-cyg/&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="_2"&gt; 安装 &lt;/h2&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;svn --force &lt;span class="nb"&gt;export &lt;/span&gt;http://apt-cyg.googlecode.com/svn/trunk/ /bin/
&lt;span class="nv"&gt;$ &lt;/span&gt;chmod +x /bin/apt-cyg
&lt;/pre&gt;&lt;/div&gt;


&lt;h2 id="_3"&gt; 使用 &lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;apt-cyg install &amp;lt;package names&amp;gt;      #  安装软件包 &lt;/code&gt;&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;apt-cyg install &lt;span class="nb"&gt;bind&lt;/span&gt;-utils
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;apt-cyg remove &amp;lt;package names&amp;gt;      #  移除软件包 &lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;apt-cyg update     #  更新  setup.ini  文件 &lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;apt-cyg show      #  列出已安装的软件包 &lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;apt-cyg find &amp;lt;pattern(s)&amp;gt;     #  查找名称匹配的软件包 &lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;apt-cyg describe &amp;lt;pattern(s)&amp;gt;     #  查找描述匹配的软件包 &lt;/code&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;apt-cyg packageof &amp;lt;commands or files&amp;gt;     #  定位命令或文件属于哪个软件包 &lt;/code&gt;&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;apt-cyg packageof dig
Found usr/bin/dig in the package &lt;span class="nb"&gt;bind&lt;/span&gt;-utils
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;apt-cyg     #  显示帮助信息 &lt;/code&gt;&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;apt-cyg
apt-cyg: Installs and removes Cygwin packages.
&lt;span class="s2"&gt;&amp;quot;apt-cyg install &amp;lt;package names&amp;gt;&amp;quot;&lt;/span&gt; to install packages
&lt;span class="s2"&gt;&amp;quot;apt-cyg remove &amp;lt;package names&amp;gt;&amp;quot;&lt;/span&gt; to remove packages
&lt;span class="s2"&gt;&amp;quot;apt-cyg update&amp;quot;&lt;/span&gt; to update setup.ini
&lt;span class="s2"&gt;&amp;quot;apt-cyg show&amp;quot;&lt;/span&gt; to show installed packages
&lt;span class="s2"&gt;&amp;quot;apt-cyg find &amp;lt;patterns&amp;gt;&amp;quot;&lt;/span&gt; to find packages matching patterns
&lt;span class="s2"&gt;&amp;quot;apt-cyg describe &amp;lt;patterns&amp;gt;&amp;quot;&lt;/span&gt; to describe packages matching patterns
&lt;span class="s2"&gt;&amp;quot;apt-cyg packageof &amp;lt;commands or files&amp;gt;&amp;quot;&lt;/span&gt; to locate parent packages
Options:
--mirror, -m &amp;lt;url&amp;gt; : &lt;span class="nb"&gt;set &lt;/span&gt;mirror
--cache, -c &amp;lt;dir&amp;gt;  : &lt;span class="nb"&gt;set &lt;/span&gt;cache
--file, -f &amp;lt;file&amp;gt;  : &lt;span class="nb"&gt;read &lt;/span&gt;package names from file
--noupdate, -u     : don&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;t update setup.ini from mirror
--help
--version
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;/ul&gt;</summary><category term="Cygwin"></category></entry><entry><title>pelican 使用笔记</title><link href="http://mozillazg.com/2013/03/pelican-notes.html" rel="alternate"></link><updated>2013-03-04T00:00:00+00:00</updated><author><name>mozillazg</name></author><id>tag:mozillazg.com,2013-03-04:2013/03/pelican-notes.html</id><summary type="html">&lt;p&gt; 记录一些使用  Pelican  写博客的经验 。&lt;/p&gt;
&lt;h2 id="markdown"&gt;Markdown&lt;/h2&gt;
&lt;h3 id="_1"&gt; 多级列表 &lt;/h3&gt;
&lt;p&gt; 官方的  Markdown  语法 ：&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;* list
  * sublist
  * sublist
* list
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;pelican  使用的是  python-markdown  来解析  markdown  文件 ，
 而  python-markdown  的关于多级列表的语法跟官方的有点不一样 ：&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;* list
    * sublist
    * sublist
* list
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt; 子列表与父列表之间的对齐方式是 ： 至少空出 4 个空格或 1 一个  Tab  键 。
 官方的语法兼容  python-markdown  的语法 ， 所以不要担心兼容性 。&lt;/p&gt;
&lt;h3 id="_2"&gt; 语法高亮 &lt;/h3&gt;
&lt;p&gt;python-markdown  使用  pygments  来实现语法高亮的功能 ， 并且支持指定编程语言 。&lt;/p&gt;
&lt;p&gt; 比如 ， 指定代码用的是  Python  编程语言 ：&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;:::python
print &amp;#39;hello, world&amp;#39;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt; 效果 ：&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;hello, world&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt; 我用的比较多的语言标记 ：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;:::text&lt;/li&gt;
&lt;li&gt;:::python&lt;/li&gt;
&lt;li&gt;:::django&lt;/li&gt;
&lt;li&gt;:::html+django&lt;/li&gt;
&lt;li&gt;:::bash&lt;/li&gt;
&lt;li&gt;:::console&lt;/li&gt;
&lt;li&gt;:::nginx&lt;/li&gt;
&lt;li&gt;:::apacheconf&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt; 更多的语言标记 ， 可以通过查看网站  &lt;a href="http://pygments.org/demo/"&gt;Pygments — Python syntax highlighter&lt;/a&gt;  的源代码操作相关的语言标记 （ 查看  id  为  flt_lang  的  select  的  option  值 ）。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt; 注意 &lt;/strong&gt;： 该语法不兼容官方  markdown  语法 。&lt;/p&gt;
&lt;h2 id="_3"&gt; 参考 &lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://docs.getpelican.com/"&gt;Pelican — Pelican documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://pythonhosted.org/Markdown/extensions/code_hilite.html"&gt;CodeHilite Extension — Python Markdown&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</summary><category term="pelican"></category><category term="markdown"></category><category term="pygments"></category><category term="python-markdown"></category></entry><entry><title>更改 phpMyAdmin 默认访问端口(apache2)</title><link href="http://mozillazg.com/2013/02/change-phpmyadmin-default-visit-port.html" rel="alternate"></link><updated>2013-02-27T00:00:00+00:00</updated><author><name>mozillazg</name></author><id>tag:mozillazg.com,2013-02-27:2013/02/change-phpmyadmin-default-visit-port.html</id><summary type="html">&lt;p&gt; 将访问  phpMyAdmin  的端口从默认的  80  改为  8081 。&lt;/p&gt;
&lt;p&gt; 本文的  phpmyadmin  目录 ：&lt;code&gt;/var/www/phpmyadmin/&lt;/code&gt;&lt;/p&gt;
&lt;p&gt; 编辑  apache  配置文件 ：&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="c"&gt;# vi /etc/apache2/sites-available/phpmyadmin&lt;/span&gt;

&amp;lt;VirtualHost *:8081&amp;gt;
    ServerName 127.0.0.1
    DocumentRoot /var/www/phpmyadmin
&amp;lt;/VirtualHost&amp;gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt; 配置  apache  监听  8081  端口 ：&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="c"&gt;# vi /etc/apache2/ports.conf&lt;/span&gt;

&lt;span class="c"&gt;#  添加 &lt;/span&gt;
NameVirtualHost *:8081
Listen 8081
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt; 重启  apache  服务 ：&lt;code&gt;service apache2 restart&lt;/code&gt;，
 现在可以通过  http://ip:8081/phpmyadmin/  访问  phpMyAdmin  了 。&lt;/p&gt;
&lt;h2 id="_1"&gt; 参考 &lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://ubuntuforums.org/showthread.php?t=1329607"&gt;PHPMyAdmin Port Change - Ubuntu Forums&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</summary><category term="phpmyadmin"></category><category term="mysql"></category><category term="ubuntu"></category></entry><entry><title>修改 pelican 3.1 使之支持中文文件夹作为分类目录</title><link href="http://mozillazg.com/2013/01/fix-pelican-use-chinese-folder-as-category.html" rel="alternate"></link><updated>2013-01-31T00:00:00+00:00</updated><author><name>mozillazg</name></author><id>tag:mozillazg.com,2013-01-31:2013/01/fix-pelican-use-chinese-folder-as-category.html</id><summary type="html">&lt;p&gt; 前提 ：&lt;/p&gt;
&lt;p&gt;windows + pelican 3.1 + python 2.6    &lt;br /&gt;
 并且  pelican  配置文件中设置了  &lt;code&gt;USE_FOLDER_AS_CATEGORY = True&lt;/code&gt;（ 默认为  True， 只要不设置为  False  即可 ）&lt;/p&gt;
&lt;p&gt; 默认情况下 ，pelican  不支持中文文件夹作为分类目录 ：&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="go"&gt;d:\myblog&amp;gt;pelican content -o output -s pelicanconf.py -D&lt;/span&gt;
&lt;span class="go"&gt;...&lt;/span&gt;

&lt;span class="go"&gt;CRITICAL: &amp;#39;utf8&amp;#39; codec can&amp;#39;t decode byte 0xd3 in position 2: invalid continuation byte&lt;/span&gt;
&lt;span class="go"&gt;Traceback (most recent call last):&lt;/span&gt;
&lt;span class="go"&gt;  File &amp;quot;C:\Python26\Scripts\pelican-script.py&amp;quot;, line 9, in &amp;lt;module&amp;gt;&lt;/span&gt;
&lt;span class="go"&gt;    load_entry_point(&amp;#39;pelican==3.1&amp;#39;, &amp;#39;console_scripts&amp;#39;, &amp;#39;pelican&amp;#39;)()&lt;/span&gt;
&lt;span class="go"&gt;  File &amp;quot;C:\Python26\lib\site-packages\pelican\__init__.py&amp;quot;, line 319, in main&lt;/span&gt;
&lt;span class="go"&gt;    pelican.run()&lt;/span&gt;
&lt;span class="go"&gt;  File &amp;quot;C:\Python26\lib\site-packages\pelican\__init__.py&amp;quot;, line 152, in run&lt;/span&gt;
&lt;span class="go"&gt;    p.generate_context()&lt;/span&gt;
&lt;span class="go"&gt;  File &amp;quot;C:\Python26\lib\site-packages\pelican\generators.py&amp;quot;, line 337, in generate_context&lt;/span&gt;
&lt;span class="go"&gt;    .decode(&amp;#39;utf-8&amp;#39;)&lt;/span&gt;
&lt;span class="go"&gt;  File &amp;quot;C:\Python26\lib\encodings\utf_8.py&amp;quot;, line 16, in decode&lt;/span&gt;
&lt;span class="go"&gt;    return codecs.utf_8_decode(input, errors, True)&lt;/span&gt;
&lt;span class="go"&gt;UnicodeDecodeError: &amp;#39;utf8&amp;#39; codec can&amp;#39;t decode byte 0xd3 in position 2: invalid continuation byte&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt; 从错误信息中我们可以看到  pelican  对文件夹名称默认按  utf8  编码进行解码 ， 而在  windows  下文件 （ 夹 ） 名称默认是按  gbk  进行编码的 ， 所以就出现了编码错误 。&lt;/p&gt;
&lt;p&gt; 下面我们来修复这个错误 。&lt;/p&gt;
&lt;p&gt; 编辑文件  &lt;code&gt;C:\Python26\lib\site-packages\pelican\generators.py&lt;/code&gt;  进行以下两步操作即可 ：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt; 首先导入  sys  模块 ：&lt;code&gt;import sys&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt; 然后编辑第  338  行左右的 &lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;category&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;basename&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dirname&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;\
           &lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;decode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;utf-8&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt; 为 &lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;category&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;basename&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dirname&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;\
           &lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;decode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;stdin&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;encoding&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt; 此处的修改是为了让程序使用系统默认的输入编码 （ 简体中文版  Windows  下默认是  gbk） 进行解码 。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt; 进行相关修改后 ， 再次执行  &lt;code&gt;pelican content -o output -s pelicanconf.py -D&lt;/code&gt;  生成  html  文件 ， 执行过程一切顺利 。&lt;/p&gt;
&lt;p&gt; 但也有一个不完美的地方 ：&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="/static/images/2013-1-pelican-issue-01.png" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="/static/images/2013-1-pelican-issue-02.png" /&gt;&lt;/p&gt;
&lt;p&gt; 虽然在浏览器中这个不会是乱码 ， 但看起来还是有点不爽 。
 下面我们要将它变成中文拼音 ， 这样就不会乱码了 。&lt;/p&gt;
&lt;p&gt; 继续编辑  generators.py  文件 ：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt; 导入相关模块 ：&lt;code&gt;from pelican.utils import slugify&lt;/code&gt; 。
    这个模块的作用是将非  ASCII  字符转换为  ASCII  字符 ， 比如 ， 将  &lt;code&gt; 中国 &lt;/code&gt;  转换为  &lt;code&gt;zhong-guo&lt;/code&gt; 。&lt;/li&gt;
&lt;li&gt;
&lt;p&gt; 将  199  行左右的 &lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;cat&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;arts&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;categories&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;arts&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sort&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;attrgetter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;date&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;reverse&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt; 改为 &lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;cat&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;arts&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;categories&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;cat&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;slugify&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cat&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;arts&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sort&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;attrgetter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;date&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;reverse&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt; 修改后的效果 ：&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="/static/images/2013-1-pelican-fixed-01.png" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="/static/images/2013-1-pelican-fixed-02.png" /&gt;&lt;/p&gt;</summary><category term="pelican"></category><category term="python"></category></entry><entry><title>使用 Pelican 生成静态博客</title><link href="http://mozillazg.com/2013/01/use-pelican-to-generate-static-blog.html" rel="alternate"></link><updated>2013-01-15T00:00:00+00:00</updated><author><name>mozillazg</name></author><id>tag:mozillazg.com,2013-01-15:2013/01/use-pelican-to-generate-static-blog.html</id><summary type="html">&lt;h2 id="pelican"&gt; 安装  Pelican&lt;/h2&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="go"&gt;sudo pip install pelican&lt;/span&gt;
&lt;span class="go"&gt;sudo pip install webassets&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2 id="_1"&gt; 使用 &lt;/h2&gt;
&lt;h3 id="_2"&gt; 配置 &lt;/h3&gt;
&lt;h3 id="_3"&gt; 主题 &lt;/h3&gt;</summary><category term="pelican"></category></entry></feed>